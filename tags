!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
BSDFSample	tina/materials/__init__.py	/^class BSDFSample(namespace):$/;"	c	language:Python	inherits:namespace	access:public
BSDFSample.__init__	tina/materials/__init__.py	/^    def __init__(self, outdir, pdf, color, impo=1.0):$/;"	m	language:Python	class:BSDFSample	access:public	signature:(self, outdir, pdf, color, impo=1.0)
BSDFSample.invalid	tina/materials/__init__.py	/^    def invalid(cls):$/;"	m	language:Python	class:BSDFSample	access:public	signature:(cls)
BVHTree	tina/acceltree.py	/^class BVHTree(metaclass=Singleton):$/;"	c	language:Python	inherits:metaclass=Singleton	access:public
BVHTree.__init__	tina/acceltree.py	/^    def __init__(self, size=2**20):$/;"	m	language:Python	class:BVHTree	access:public	signature:(self, size=2**20)
BVHTree._dump_face_bboxes	tina/acceltree.py	/^    def _dump_face_bboxes(self, nfaces: int, pmin: ti.ext_arr(), pmax: ti.ext_arr()):$/;"	m	language:Python	class:BVHTree	access:protected	signature:(self, nfaces: int, pmin: ti.ext_arr(), pmax: ti.ext_arr())
BVHTree.build	tina/acceltree.py	/^    def build(self):$/;"	m	language:Python	class:BVHTree	access:public	signature:(self)
BVHTree.intersect	tina/acceltree.py	/^    def intersect(self, ray, avoid):$/;"	m	language:Python	class:BVHTree	access:public	signature:(self, ray, avoid)
Box	tina/geometries.py	/^class Box(namespace):$/;"	c	language:Python	inherits:namespace	access:public
Box.__init__	tina/geometries.py	/^    def __init__(self, lo, hi):$/;"	m	language:Python	class:Box	access:public	signature:(self, lo, hi)
Box.intersect	tina/geometries.py	/^    def intersect(self, r):$/;"	m	language:Python	class:Box	access:public	signature:(self, r)
Camera	tina/camera.py	/^class Camera(metaclass=Singleton):$/;"	c	language:Python	inherits:metaclass=Singleton	access:public
Camera.V2W	tina/camera.py	/^    def V2W(self):$/;"	m	language:Python	class:Camera	access:public	signature:(self)
Camera.W2V	tina/camera.py	/^    def W2V(self):$/;"	m	language:Python	class:Camera	access:public	signature:(self)
Camera.__init__	tina/camera.py	/^    def __init__(self):$/;"	m	language:Python	class:Camera	access:public	signature:(self)
Camera.__init__.init_camera	tina/camera.py	/^        def init_camera():$/;"	f	language:Python	member:Camera.__init__	file:	access:private	signature:()
Camera.generate	tina/camera.py	/^    def generate(self, x, y):$/;"	m	language:Python	class:Camera	access:public	signature:(self, x, y)
Camera.set_perspective	tina/camera.py	/^    def set_perspective(self, pers):$/;"	m	language:Python	class:Camera	access:public	signature:(self, pers)
Choice	tina/materials/__init__.py	/^class Choice(namespace):$/;"	c	language:Python	inherits:namespace	access:public
Choice.__call__	tina/materials/__init__.py	/^    def __call__(self, r):$/;"	m	language:Python	class:Choice	access:public	signature:(self, r)
Choice.__init__	tina/materials/__init__.py	/^    def __init__(self, w):$/;"	m	language:Python	class:Choice	access:public	signature:(self, w)
Choice.call	tina/materials/__init__.py	/^    def call(self, r):$/;"	m	language:Python	class:Choice	access:public	signature:(self, r)
Control	tina/tools/control.py	/^class Control:$/;"	c	language:Python	inherits:	access:public
Control.__init__	tina/tools/control.py	/^    def __init__(self, gui, fov=60, is_ortho=False, blendish=True):$/;"	m	language:Python	class:Control	access:public	signature:(self, gui, fov=60, is_ortho=False, blendish=True)
Control._check_mouse_move	tina/tools/control.py	/^    def _check_mouse_move(self):$/;"	m	language:Python	class:Control	access:protected	signature:(self)
Control._on_event	tina/tools/control.py	/^    def _on_event(self, e):$/;"	m	language:Python	class:Control	access:protected	signature:(self, e)
Control._on_fovadj	tina/tools/control.py	/^    def _on_fovadj(self, delta, origin):$/;"	m	language:Python	class:Control	access:protected	signature:(self, delta, origin)
Control._on_lmb_drag	tina/tools/control.py	/^    def _on_lmb_drag(self, delta, origin):$/;"	m	language:Python	class:Control	access:protected	signature:(self, delta, origin)
Control._on_mmb_drag	tina/tools/control.py	/^    def _on_mmb_drag(self, delta, origin):$/;"	m	language:Python	class:Control	access:protected	signature:(self, delta, origin)
Control._on_orbit	tina/tools/control.py	/^    def _on_orbit(self, delta, origin):$/;"	m	language:Python	class:Control	access:protected	signature:(self, delta, origin)
Control._on_pan	tina/tools/control.py	/^    def _on_pan(self, delta, origin):$/;"	m	language:Python	class:Control	access:protected	signature:(self, delta, origin)
Control._on_rmb_drag	tina/tools/control.py	/^    def _on_rmb_drag(self, delta, origin):$/;"	m	language:Python	class:Control	access:protected	signature:(self, delta, origin)
Control._on_wheel	tina/tools/control.py	/^    def _on_wheel(self, delta, origin):$/;"	m	language:Python	class:Control	access:protected	signature:(self, delta, origin)
Control._on_zoom	tina/tools/control.py	/^    def _on_zoom(self, delta, origin):$/;"	m	language:Python	class:Control	access:protected	signature:(self, delta, origin)
Control.back	tina/tools/control.py	/^    def back(self):$/;"	m	language:Python	class:Control	access:public	signature:(self)
Control.get_perspective	tina/tools/control.py	/^    def get_perspective(self):$/;"	m	language:Python	class:Control	access:public	signature:(self)
Control.process_events	tina/tools/control.py	/^    def process_events(self):$/;"	m	language:Python	class:Control	access:public	signature:(self)
Control.up	tina/tools/control.py	/^    def up(self):$/;"	m	language:Python	class:Control	access:public	signature:(self)
Disney	tina/materials/disney.py	/^class Disney(namespace):$/;"	c	language:Python	inherits:namespace	access:public
Disney.__init__	tina/materials/disney.py	/^    def __init__(self,$/;"	m	language:Python	class:Disney	access:public	signature:(self, basecolor=V3(1.0), metallic=0.0, roughness=1.0, specular=0.5, specularTint=0.4, subsurface=0.0, sheen=0.0, sheenTint=0.4, clearcoat=0.0, clearcoatGloss=0.5, transmission=0.0, ior=1.45)
Disney.bounce	tina/materials/disney.py	/^    def bounce(self, normal, sign, indir, samp):$/;"	m	language:Python	class:Disney	access:public	signature:(self, normal, sign, indir, samp)
Disney.brdf	tina/materials/disney.py	/^    def brdf(self, normal, sign, indir, outdir):$/;"	m	language:Python	class:Disney	access:public	signature:(self, normal, sign, indir, outdir)
Face	tina/geometries.py	/^class Face(namespace):$/;"	c	language:Python	inherits:namespace	access:public
Face.__init__	tina/geometries.py	/^    def __init__(self, v0, v1, v2, vn0, vn1, vn2, vt0, vt1, vt2, mtlid):$/;"	m	language:Python	class:Face	access:public	signature:(self, v0, v1, v2, vn0, vn1, vn2, vt0, vt1, vt2, mtlid)
Face.getbbox	tina/geometries.py	/^    def getbbox(self):$/;"	m	language:Python	class:Face	access:public	signature:(self)
Face.intersect	tina/geometries.py	/^    def intersect(self, ray):$/;"	m	language:Python	class:Face	access:public	signature:(self, ray)
Face.normal	tina/geometries.py	/^    def normal(self, h):$/;"	m	language:Python	class:Face	access:public	signature:(self, h)
Face.texcoord	tina/geometries.py	/^    def texcoord(self, h):$/;"	m	language:Python	class:Face	access:public	signature:(self, h)
Face.true_normal	tina/geometries.py	/^    def true_normal(self):$/;"	m	language:Python	class:Face	access:public	signature:(self)
FakeAssign	tina/common.py	/^    class FakeAssign:$/;"	c	language:Python	class:namespace	inherits:	access:public
GTR1	tina/materials/microfacet.py	/^def GTR1(cosh, alpha):$/;"	f	language:Python	access:public	signature:(cosh, alpha)
GTR2	tina/materials/microfacet.py	/^def GTR2(cosh, alpha):$/;"	f	language:Python	access:public	signature:(cosh, alpha)
GUI	tina/common.py	/^    class GUI(ti.GUI):$/;"	c	language:Python	function:_	file:	inherits:ti.GUI	access:private
GlobalStack	tina/stack.py	/^class GlobalStack(metaclass=Singleton):$/;"	c	language:Python	inherits:metaclass=Singleton	access:public
GlobalStack.Proxy	tina/stack.py	/^    class Proxy:$/;"	c	language:Python	class:GlobalStack	inherits:	access:public
GlobalStack.Proxy.__getattr__	tina/stack.py	/^        def __getattr__(self, attr):$/;"	m	language:Python	class:GlobalStack.Proxy	access:public	signature:(self, attr)
GlobalStack.Proxy.__init__	tina/stack.py	/^        def __init__(self, stack, mtid):$/;"	m	language:Python	class:GlobalStack.Proxy	access:public	signature:(self, stack, mtid)
GlobalStack.Proxy.clear	tina/stack.py	/^        def clear(self):$/;"	m	language:Python	class:GlobalStack.Proxy	access:public	signature:(self)
GlobalStack.Proxy.pop	tina/stack.py	/^        def pop(self):$/;"	m	language:Python	class:GlobalStack.Proxy	access:public	signature:(self)
GlobalStack.Proxy.push	tina/stack.py	/^        def push(self, val):$/;"	m	language:Python	class:GlobalStack.Proxy	access:public	signature:(self, val)
GlobalStack.Proxy.size	tina/stack.py	/^        def size(self):$/;"	m	language:Python	class:GlobalStack.Proxy	access:public	signature:(self)
GlobalStack.__init__	tina/stack.py	/^    def __init__(self, N_mt=512 * 512, N_len=32):$/;"	m	language:Python	class:GlobalStack	access:public	signature:(self, N_mt=512 * 512, N_len=32)
GlobalStack.get	tina/stack.py	/^    def get(self):$/;"	m	language:Python	class:GlobalStack	access:public	signature:(self)
GlobalStack.set	tina/stack.py	/^    def set(self, mtid):$/;"	m	language:Python	class:GlobalStack	access:public	signature:(self, mtid)
GlobalStack.unset	tina/stack.py	/^    def unset(self):$/;"	m	language:Python	class:GlobalStack	access:public	signature:(self)
IdAllocator	tina/allocator.py	/^class IdAllocator:$/;"	c	language:Python	inherits:	access:public
IdAllocator.__init__	tina/allocator.py	/^    def __init__(self, count):$/;"	m	language:Python	class:IdAllocator	access:public	signature:(self, count)
IdAllocator.free	tina/allocator.py	/^    def free(self, id):$/;"	m	language:Python	class:IdAllocator	access:public	signature:(self, id)
IdAllocator.malloc	tina/allocator.py	/^    def malloc(self):$/;"	m	language:Python	class:IdAllocator	access:public	signature:(self)
Image	tina/image.py	/^class Image:$/;"	c	language:Python	inherits:	access:public
Image.__call__	tina/image.py	/^    def __call__(self, x, y):$/;"	m	language:Python	class:Image	access:public	signature:(self, x, y)
Image.__init__	tina/image.py	/^    def __init__(self, id):$/;"	m	language:Python	class:Image	access:public	signature:(self, id)
Image.clear	tina/image.py	/^    def clear(self):$/;"	m	language:Python	class:Image	access:public	signature:(self)
Image.delete	tina/image.py	/^    def delete(self):$/;"	m	language:Python	class:Image	access:public	signature:(self)
Image.from_numpy	tina/image.py	/^    def from_numpy(self, arr):$/;"	m	language:Python	class:Image	access:public	signature:(self, arr)
Image.get_image	tina/image.py	/^    def get_image(self, aov=None, raw=False):$/;"	m	language:Python	class:Image	access:public	signature:(self, aov=None, raw=False)
Image.is_taichi_class	tina/image.py	/^    is_taichi_class = True$/;"	v	language:Python	class:Image	access:public
Image.load	tina/image.py	/^    def load(cls, arr):$/;"	m	language:Python	class:Image	access:public	signature:(cls, arr)
Image.new	tina/image.py	/^    def new(cls, nx, ny):$/;"	m	language:Python	class:Image	access:public	signature:(cls, nx, ny)
Image.nx	tina/image.py	/^    def nx(self):$/;"	m	language:Python	class:Image	access:public	signature:(self)
Image.ny	tina/image.py	/^    def ny(self):$/;"	m	language:Python	class:Image	access:public	signature:(self)
Image.subscript	tina/image.py	/^    def subscript(self, x, y):$/;"	m	language:Python	class:Image	access:public	signature:(self, x, y)
Image.to_numpy	tina/image.py	/^    def to_numpy(self):$/;"	m	language:Python	class:Image	access:public	signature:(self)
Image.to_numpy_normalized	tina/image.py	/^    def to_numpy_normalized(self, tonemap=None):$/;"	m	language:Python	class:Image	access:public	signature:(self, tonemap=None)
Image.variable	tina/image.py	/^    def variable(self):$/;"	m	language:Python	class:Image	access:public	signature:(self)
ImagePool	tina/image.py	/^class ImagePool(metaclass=Singleton):$/;"	c	language:Python	inherits:metaclass=Singleton	access:public
ImagePool.__init__	tina/image.py	/^    def __init__(self, size=2**22, count=2**8):$/;"	m	language:Python	class:ImagePool	access:public	signature:(self, size=2**22, count=2**8)
ImagePool._to_numpy	tina/image.py	/^    def _to_numpy(self, id: int, arr: ti.ext_arr()):$/;"	m	language:Python	class:ImagePool	access:protected	signature:(self, id: int, arr: ti.ext_arr())
ImagePool._to_numpy_normalized	tina/image.py	/^    def _to_numpy_normalized(self, id: int, arr: ti.ext_arr(), tonemap: ti.template()):$/;"	m	language:Python	class:ImagePool	access:protected	signature:(self, id: int, arr: ti.ext_arr(), tonemap: ti.template())
ImagePool.clear	tina/image.py	/^    def clear(self, id: int):$/;"	m	language:Python	class:ImagePool	access:public	signature:(self, id: int)
ImagePool.delete	tina/image.py	/^    def delete(self, id):$/;"	m	language:Python	class:ImagePool	access:public	signature:(self, id)
ImagePool.from_numpy	tina/image.py	/^    def from_numpy(self, id: int, arr: ti.ext_arr()):$/;"	m	language:Python	class:ImagePool	access:public	signature:(self, id: int, arr: ti.ext_arr())
ImagePool.is_taichi_class	tina/image.py	/^    is_taichi_class = True$/;"	v	language:Python	class:ImagePool	access:public
ImagePool.load	tina/image.py	/^    def load(self, arr):$/;"	m	language:Python	class:ImagePool	access:public	signature:(self, arr)
ImagePool.load._	tina/image.py	/^        def _():$/;"	f	language:Python	member:ImagePool.load	file:	access:private	signature:()
ImagePool.new	tina/image.py	/^    def new(self, nx, ny):$/;"	m	language:Python	class:ImagePool	access:public	signature:(self, nx, ny)
ImagePool.new._	tina/image.py	/^        def _():$/;"	f	language:Python	member:ImagePool.new	file:	access:private	signature:()
ImagePool.subscript	tina/image.py	/^    def subscript(self, i, x, y):$/;"	m	language:Python	class:ImagePool	access:public	signature:(self, i, x, y)
ImagePool.to_numpy	tina/image.py	/^    def to_numpy(self, id):$/;"	m	language:Python	class:ImagePool	access:public	signature:(self, id)
ImagePool.to_numpy_normalized	tina/image.py	/^    def to_numpy_normalized(self, id, tonemap=None):$/;"	m	language:Python	class:ImagePool	access:public	signature:(self, id, tonemap=None)
Lambert	tina/materials/__init__.py	/^class Lambert(namespace):$/;"	c	language:Python	inherits:namespace	access:public
Lambert.__init__	tina/materials/__init__.py	/^    def __init__(self, color=V3(1.0)):$/;"	m	language:Python	class:Lambert	access:public	signature:(self, color=V3(1.0))
Lambert.bounce	tina/materials/__init__.py	/^    def bounce(self, normal, sign, indir, samp):$/;"	m	language:Python	class:Lambert	access:public	signature:(self, normal, sign, indir, samp)
Lambert.brdf	tina/materials/__init__.py	/^    def brdf(self, normal, sign, indir, outdir):$/;"	m	language:Python	class:Lambert	access:public	signature:(self, normal, sign, indir, outdir)
LightPool	tina/light.py	/^class LightPool(metaclass=Singleton):$/;"	c	language:Python	inherits:metaclass=Singleton	access:public
LightPool.__init__	tina/light.py	/^    def __init__(self, count=2**6):$/;"	m	language:Python	class:LightPool	access:public	signature:(self, count=2**6)
LightPool.hit	tina/light.py	/^    def hit(self, ray):$/;"	m	language:Python	class:LightPool	access:public	signature:(self, ray)
LightPool.sample	tina/light.py	/^    def sample(self, pos, samp):$/;"	m	language:Python	class:LightPool	access:public	signature:(self, pos, samp)
LocalArray	tina/localarray.py	/^class LocalArray:$/;"	c	language:Python	inherits:	access:public
LocalArray.__init__	tina/localarray.py	/^    def __init__(self, dtype, size):$/;"	m	language:Python	class:LocalArray	access:public	signature:(self, dtype, size)
LocalArray._define	tina/localarray.py	/^    def _define(self):$/;"	m	language:Python	class:LocalArray	access:protected	signature:(self)
LocalArray._override_assign	tina/localarray.py	/^    def _override_assign(self, var, idx):$/;"	m	language:Python	class:LocalArray	access:protected	signature:(self, var, idx)
LocalArray._override_assign.assign	tina/localarray.py	/^        def assign(val):$/;"	f	language:Python	member:LocalArray._override_assign	file:	access:private	signature:(val)
LocalArray.is_taichi_class	tina/localarray.py	/^    is_taichi_class = True$/;"	v	language:Python	class:LocalArray	access:public
LocalArray.subscript	tina/localarray.py	/^    def subscript(self, idx):$/;"	m	language:Python	class:LocalArray	access:public	signature:(self, idx)
LocalArray.uniqid	tina/localarray.py	/^    uniqid = 0$/;"	v	language:Python	class:LocalArray	access:public
LocalArray.variable	tina/localarray.py	/^    def variable(self):$/;"	m	language:Python	class:LocalArray	access:public	signature:(self)
LocalStack	tina/stack.py	/^class LocalStack(metaclass=Singleton):$/;"	c	language:Python	inherits:metaclass=Singleton	access:public
LocalStack.Proxy	tina/stack.py	/^    class Proxy:$/;"	c	language:Python	class:LocalStack	inherits:	access:public
LocalStack.Proxy.__init__	tina/stack.py	/^        def __init__(self, size):$/;"	m	language:Python	class:LocalStack.Proxy	access:public	signature:(self, size)
LocalStack.Proxy.clear	tina/stack.py	/^        def clear(self):$/;"	m	language:Python	class:LocalStack.Proxy	access:public	signature:(self)
LocalStack.Proxy.pop	tina/stack.py	/^        def pop(self):$/;"	m	language:Python	class:LocalStack.Proxy	access:public	signature:(self)
LocalStack.Proxy.push	tina/stack.py	/^        def push(self, val):$/;"	m	language:Python	class:LocalStack.Proxy	access:public	signature:(self, val)
LocalStack.Proxy.size	tina/stack.py	/^        def size(self):$/;"	m	language:Python	class:LocalStack.Proxy	access:public	signature:(self)
LocalStack.__init__	tina/stack.py	/^    def __init__(self, size=64):$/;"	m	language:Python	class:LocalStack	access:public	signature:(self, size=64)
LocalStack.get	tina/stack.py	/^    def get(self):$/;"	m	language:Python	class:LocalStack	access:public	signature:(self)
LocalStack.set	tina/stack.py	/^    def set(self, mtid):$/;"	m	language:Python	class:LocalStack	access:public	signature:(self, mtid)
LocalStack.unset	tina/stack.py	/^    def unset(self):$/;"	m	language:Python	class:LocalStack	access:public	signature:(self)
M33	tina/common.py	/^def M33(mat):$/;"	f	language:Python	access:public	signature:(mat)
MaterialPool	tina/mtllib.py	/^class MaterialPool(metaclass=Singleton):$/;"	c	language:Python	inherits:metaclass=Singleton	access:public
MaterialPool.__init__	tina/mtllib.py	/^    def __init__(self, count=2**6):$/;"	m	language:Python	class:MaterialPool	access:public	signature:(self, count=2**6)
MaterialPool.get	tina/mtllib.py	/^    def get(self, mtlid, texcoord):$/;"	m	language:Python	class:MaterialPool	access:public	signature:(self, mtlid, texcoord)
MaterialPool.load	tina/mtllib.py	/^    def load(self, materials):$/;"	m	language:Python	class:MaterialPool	access:public	signature:(self, materials)
MemoryAllocator	tina/allocator.py	/^class MemoryAllocator:$/;"	c	language:Python	inherits:	access:public
MemoryAllocator.__init__	tina/allocator.py	/^    def __init__(self, size):$/;"	m	language:Python	class:MemoryAllocator	access:public	signature:(self, size)
MemoryAllocator.free	tina/allocator.py	/^    def free(self, base):$/;"	m	language:Python	class:MemoryAllocator	access:public	signature:(self, base)
MemoryAllocator.malloc	tina/allocator.py	/^    def malloc(self, size):$/;"	m	language:Python	class:MemoryAllocator	access:public	signature:(self, size)
Mirror	tina/materials/__init__.py	/^class Mirror(namespace):$/;"	c	language:Python	inherits:namespace	access:public
Mirror.__init__	tina/materials/__init__.py	/^    def __init__(self, color=V3(1.0)):$/;"	m	language:Python	class:Mirror	access:public	signature:(self, color=V3(1.0))
Mirror.bounce	tina/materials/__init__.py	/^    def bounce(self, normal, sign, indir, samp):$/;"	m	language:Python	class:Mirror	access:public	signature:(self, normal, sign, indir, samp)
Mirror.brdf	tina/materials/__init__.py	/^    def brdf(self, normal, sign, indir, outdir):$/;"	m	language:Python	class:Mirror	access:public	signature:(self, normal, sign, indir, outdir)
ModelPool	tina/model.py	/^class ModelPool(metaclass=Singleton):$/;"	c	language:Python	inherits:metaclass=Singleton	access:public
ModelPool.__init__	tina/model.py	/^    def __init__(self, size=2**20):$/;"	m	language:Python	class:ModelPool	access:public	signature:(self, size=2**20)
ModelPool._to_numpy	tina/model.py	/^    def _to_numpy(self, arr: ti.ext_arr(), mtlids: ti.ext_arr()):$/;"	m	language:Python	class:ModelPool	access:protected	signature:(self, arr: ti.ext_arr(), mtlids: ti.ext_arr())
ModelPool.from_numpy	tina/model.py	/^    def from_numpy(self, arr: ti.ext_arr(), mtlids: ti.ext_arr()):$/;"	m	language:Python	class:ModelPool	access:public	signature:(self, arr: ti.ext_arr(), mtlids: ti.ext_arr())
ModelPool.get_face	tina/model.py	/^    def get_face(self, i):$/;"	m	language:Python	class:ModelPool	access:public	signature:(self, i)
ModelPool.is_taichi_class	tina/model.py	/^    is_taichi_class = True$/;"	v	language:Python	class:ModelPool	access:public
ModelPool.load	tina/model.py	/^    def load(self, arr, mtlids=None):$/;"	m	language:Python	class:ModelPool	access:public	signature:(self, arr, mtlids=None)
ModelPool.subscript	tina/model.py	/^    def subscript(self, i):$/;"	m	language:Python	class:ModelPool	access:public	signature:(self, i)
ModelPool.to_numpy	tina/model.py	/^    def to_numpy(self, id):$/;"	m	language:Python	class:ModelPool	access:public	signature:(self, id)
MyData	tests/common/test_namespace.py	/^    class MyData(namespace):$/;"	c	language:Python	function:test_class	file:	inherits:namespace	access:private
ParameterPair	tina/mtllib.py	/^class ParameterPair:$/;"	c	language:Python	inherits:	access:public
ParameterPair.__init__	tina/mtllib.py	/^    def __init__(self, count):$/;"	m	language:Python	class:ParameterPair	access:public	signature:(self, count)
ParameterPair.get	tina/mtllib.py	/^    def get(self, mtlid, texcoord):$/;"	m	language:Python	class:ParameterPair	access:public	signature:(self, mtlid, texcoord)
ParameterPair.load	tina/mtllib.py	/^    def load(self, i, fac, tex):$/;"	m	language:Python	class:ParameterPair	access:public	signature:(self, i, fac, tex)
PathEngine	tina/engine.py	/^class PathEngine(metaclass=Singleton):$/;"	c	language:Python	inherits:metaclass=Singleton	access:public
PathEngine.__init__	tina/engine.py	/^    def __init__(self):$/;"	m	language:Python	class:PathEngine	access:public	signature:(self)
PathEngine.get_geometries	tina/engine.py	/^    def get_geometries(self, hit, r):$/;"	m	language:Python	class:PathEngine	access:public	signature:(self, hit, r)
PathEngine.render	tina/engine.py	/^    def render(self):$/;"	m	language:Python	class:PathEngine	access:public	signature:(self)
PathEngine.render_aov	tina/engine.py	/^    def render_aov(self):$/;"	m	language:Python	class:PathEngine	access:public	signature:(self)
PathEngine.trace	tina/engine.py	/^    def trace(self, r):$/;"	m	language:Python	class:PathEngine	access:public	signature:(self, r)
Phong	tina/materials/__init__.py	/^class Phong(namespace):$/;"	c	language:Python	inherits:namespace	access:public
Phong.__init__	tina/materials/__init__.py	/^    def __init__(self, color=V3(1.0), shineness=32.0):$/;"	m	language:Python	class:Phong	access:public	signature:(self, color=V3(1.0), shineness=32.0)
Phong.bounce	tina/materials/__init__.py	/^    def bounce(self, normal, sign, indir, samp):$/;"	m	language:Python	class:Phong	access:public	signature:(self, normal, sign, indir, samp)
Phong.brdf	tina/materials/__init__.py	/^    def brdf(self, normal, sign, indir, outdir):$/;"	m	language:Python	class:Phong	access:public	signature:(self, normal, sign, indir, outdir)
Proxy	tina/stack.py	/^    class Proxy:$/;"	c	language:Python	class:GlobalStack	inherits:	access:public
Proxy	tina/stack.py	/^    class Proxy:$/;"	c	language:Python	class:LocalStack	inherits:	access:public
Ray	tina/geometries.py	/^class Ray(namespace):$/;"	c	language:Python	inherits:namespace	access:public
Ray.__init__	tina/geometries.py	/^    def __init__(self, o, d):$/;"	m	language:Python	class:Ray	access:public	signature:(self, o, d)
Singleton	tina/common.py	/^class Singleton(type):$/;"	c	language:Python	inherits:type	access:public
Singleton.__call__	tina/common.py	/^    def __call__(self, *args, **kwargs):$/;"	m	language:Python	class:Singleton	access:public	signature:(self, *args, **kwargs)
Singleton._instance	tina/common.py	/^    _instance = None$/;"	v	language:Python	class:Singleton	access:protected
Sphere	tina/geometries.py	/^class Sphere(namespace):$/;"	c	language:Python	inherits:namespace	access:public
Sphere.__init__	tina/geometries.py	/^    def __init__(self, pos, rad2):$/;"	m	language:Python	class:Sphere	access:public	signature:(self, pos, rad2)
Sphere.intersect	tina/geometries.py	/^    def intersect(self, ray):$/;"	m	language:Python	class:Sphere	access:public	signature:(self, ray)
Stack	tina/stack.py	/^def Stack():$/;"	f	language:Python	access:public	signature:()
ToneMapping	tina/image.py	/^class ToneMapping(metaclass=Singleton):$/;"	c	language:Python	inherits:metaclass=Singleton	access:public
ToneMapping.__call__	tina/image.py	/^    def __call__(self, hdr):$/;"	m	language:Python	class:ToneMapping	access:public	signature:(self, hdr)
ToneMapping.__init__	tina/image.py	/^    def __init__(self):$/;"	m	language:Python	class:ToneMapping	access:public	signature:(self)
ToneMapping.__init__.init_tonemap	tina/image.py	/^        def init_tonemap():$/;"	f	language:Python	member:ToneMapping.__init__	file:	access:private	signature:()
U2	tina/common.py	/^def U2(i):$/;"	f	language:Python	access:public	signature:(i)
U3	tina/common.py	/^def U3(i):$/;"	f	language:Python	access:public	signature:(i)
V	tina/common.py	/^def V(*xs):$/;"	f	language:Python	access:public	signature:(*xs)
V2	tina/common.py	/^def V2(x):$/;"	f	language:Python	access:public	signature:(x)
V23	tina/common.py	/^def V23(xy, z):$/;"	f	language:Python	access:public	signature:(xy, z)
V2W	tina/camera.py	/^    def V2W(self):$/;"	m	language:Python	class:Camera	access:public	signature:(self)
V3	tina/common.py	/^def V3(x):$/;"	f	language:Python	access:public	signature:(x)
V34	tina/common.py	/^def V34(xyz, w):$/;"	f	language:Python	access:public	signature:(xyz, w)
V4	tina/common.py	/^def V4(x):$/;"	f	language:Python	access:public	signature:(x)
V43	tina/common.py	/^def V43(v):$/;"	f	language:Python	access:public	signature:(v)
Vall	tina/common.py	/^def Vall(u):$/;"	f	language:Python	access:public	signature:(u)
Vany	tina/common.py	/^def Vany(u):$/;"	f	language:Python	access:public	signature:(u)
Vavg	tina/common.py	/^def Vavg(u):$/;"	f	language:Python	access:public	signature:(u)
Vlen	tina/common.py	/^def Vlen(u):$/;"	f	language:Python	access:public	signature:(u)
Vlen2	tina/common.py	/^def Vlen2(u):$/;"	f	language:Python	access:public	signature:(u)
Vprod	tina/common.py	/^def Vprod(w):$/;"	f	language:Python	access:public	signature:(w)
W2V	tina/camera.py	/^    def W2V(self):$/;"	m	language:Python	class:Camera	access:public	signature:(self)
_	tina/common.py	/^def _():$/;"	f	language:Python	access:protected	signature:()
_	tina/image.py	/^        def _():$/;"	f	language:Python	member:ImagePool.load	file:	access:private	signature:()
_	tina/image.py	/^        def _():$/;"	f	language:Python	member:ImagePool.new	file:	access:private	signature:()
_.GUI	tina/common.py	/^    class GUI(ti.GUI):$/;"	c	language:Python	function:_	file:	inherits:ti.GUI	access:private
_.GUI.__init__	tina/common.py	/^        def __init__(self, name='Tina', res=512, **kwargs):$/;"	m	language:Python	class:_.GUI	access:public	signature:(self, name='Tina', res=512, **kwargs)
_.GUI.post_show_callback	tina/common.py	/^        def post_show_callback(self, cb):$/;"	m	language:Python	class:_.GUI	access:public	signature:(self, cb)
_.GUI.rects	tina/common.py	/^        def rects(self, topleft, bottomright, radius=1, color=0xffffff):$/;"	m	language:Python	class:_.GUI	access:public	signature:(self, topleft, bottomright, radius=1, color=0xffffff)
_.GUI.rects.np	tina/common.py	/^            import numpy as np$/;"	I	language:Python	member:_.GUI.rects	file:	access:private
_.GUI.show	tina/common.py	/^        def show(self, *args, **kwargs):$/;"	m	language:Python	class:_.GUI	access:public	signature:(self, *args, **kwargs)
_.get_decorator	tina/common.py	/^    def get_decorator(node):$/;"	f	language:Python	function:_	file:	access:private	signature:(node)
_.visit_struct_for	tina/common.py	/^    def visit_struct_for(self, node, is_grouped):$/;"	f	language:Python	function:_	file:	access:private	signature:(self, node, is_grouped)
_BVHTree	tina/acceltree.py	/^class _BVHTree:$/;"	c	language:Python	inherits:	access:protected
_BVHTree.__init__	tina/acceltree.py	/^    def __init__(self, size):$/;"	m	language:Python	class:_BVHTree	access:public	signature:(self, size)
_BVHTree._build	tina/acceltree.py	/^    def _build(self, data, pmin, pmax, pind, curr):$/;"	m	language:Python	class:_BVHTree	access:protected	signature:(self, data, pmin, pmax, pind, curr)
_BVHTree._build_from_data	tina/acceltree.py	/^    def _build_from_data(self,$/;"	m	language:Python	class:_BVHTree	access:protected	signature:(self, data_dir: ti.ext_arr(), data_min: ti.ext_arr(), data_max: ti.ext_arr(), data_ind: ti.ext_arr())
_BVHTree.build	tina/acceltree.py	/^    def build(self, pmin, pmax):$/;"	m	language:Python	class:_BVHTree	access:public	signature:(self, pmin, pmax)
_BVHTree.build.data	tina/acceltree.py	/^        data = lambda: None$/;"	f	language:Python	member:_BVHTree.build	file:	access:private	signature:()
_BVHTree.element_intersect	tina/acceltree.py	/^    def element_intersect(self, index, ray):$/;"	m	language:Python	class:_BVHTree	access:public	signature:(self, index, ray)
_BVHTree.getbox	tina/acceltree.py	/^    def getbox(self, curr):$/;"	m	language:Python	class:_BVHTree	access:public	signature:(self, curr)
_BVHTree.intersect	tina/acceltree.py	/^    def intersect(self, ray, avoid):$/;"	m	language:Python	class:_BVHTree	access:public	signature:(self, ray, avoid)
_BVHTree.is_leaf	tina/acceltree.py	/^    def is_leaf(self, curr):$/;"	m	language:Python	class:_BVHTree	access:public	signature:(self, curr)
_BVHTree.process_leaf	tina/acceltree.py	/^    def process_leaf(self, ret: ti.template(), curr, ray, avoid):$/;"	m	language:Python	class:_BVHTree	access:public	signature:(self, ret: ti.template(), curr, ray, avoid)
_NoToneMap	tina/image.py	/^def _NoToneMap(x):$/;"	f	language:Python	access:protected	signature:(x)
_OldCamera	tina/camera.py	/^class _OldCamera(namespace):$/;"	c	language:Python	inherits:namespace	access:protected
_OldCamera.__init__	tina/camera.py	/^    def __init__(self, pos=V(0.0, 0.0, 4.0),$/;"	m	language:Python	class:_OldCamera	access:public	signature:(self, pos=V(0.0, 0.0, 4.0), up=V(0.0, 1.0, 0.0), tgt=V3(0.0), fov=45.0)
_OldCamera.generate	tina/camera.py	/^    def generate(self, x, y):$/;"	m	language:Python	class:_OldCamera	access:public	signature:(self, x, y)
_OldCamera.is_taichi_class	tina/camera.py	/^    is_taichi_class = True$/;"	v	language:Python	class:_OldCamera	access:public
__call__	tina/common.py	/^        def __call__(self, *args, **kwargs):$/;"	m	language:Python	class:namespace.FakeAssign	access:public	signature:(self, *args, **kwargs)
__call__	tina/common.py	/^    def __call__(self, *args, **kwargs):$/;"	m	language:Python	class:Singleton	access:public	signature:(self, *args, **kwargs)
__call__	tina/image.py	/^    def __call__(self, hdr):$/;"	m	language:Python	class:ToneMapping	access:public	signature:(self, hdr)
__call__	tina/image.py	/^    def __call__(self, x, y):$/;"	m	language:Python	class:Image	access:public	signature:(self, x, y)
__call__	tina/materials/__init__.py	/^    def __call__(self, r):$/;"	m	language:Python	class:Choice	access:public	signature:(self, r)
__getattr__	tina/common.py	/^        def __getattr__(self, name):$/;"	m	language:Python	class:namespace.FakeAssign	access:public	signature:(self, name)
__getattr__	tina/common.py	/^    def __getattr__(self, name):$/;"	m	language:Python	class:namespace	access:public	signature:(self, name)
__getattr__	tina/stack.py	/^        def __getattr__(self, attr):$/;"	m	language:Python	class:GlobalStack.Proxy	access:public	signature:(self, attr)
__init__	tests/common/test_namespace.py	/^        def __init__(self, z):$/;"	m	language:Python	class:test_class.MyData	access:public	signature:(self, z)
__init__	tina/acceltree.py	/^    def __init__(self, size):$/;"	m	language:Python	class:_BVHTree	access:public	signature:(self, size)
__init__	tina/acceltree.py	/^    def __init__(self, size=2**20):$/;"	m	language:Python	class:BVHTree	access:public	signature:(self, size=2**20)
__init__	tina/allocator.py	/^    def __init__(self, count):$/;"	m	language:Python	class:IdAllocator	access:public	signature:(self, count)
__init__	tina/allocator.py	/^    def __init__(self, size):$/;"	m	language:Python	class:MemoryAllocator	access:public	signature:(self, size)
__init__	tina/camera.py	/^    def __init__(self):$/;"	m	language:Python	class:Camera	access:public	signature:(self)
__init__	tina/camera.py	/^    def __init__(self, pos=V(0.0, 0.0, 4.0),$/;"	m	language:Python	class:_OldCamera	access:public	signature:(self, pos=V(0.0, 0.0, 4.0), up=V(0.0, 1.0, 0.0), tgt=V3(0.0), fov=45.0)
__init__	tina/common.py	/^        def __init__(self, name='Tina', res=512, **kwargs):$/;"	m	language:Python	class:_.GUI	access:public	signature:(self, name='Tina', res=512, **kwargs)
__init__	tina/common.py	/^        def __init__(self, parent, name):$/;"	m	language:Python	class:namespace.FakeAssign	access:public	signature:(self, parent, name)
__init__	tina/common.py	/^    def __init__(self, **kwargs):$/;"	m	language:Python	class:namespace	access:public	signature:(self, **kwargs)
__init__	tina/common.py	/^    def __init__(self, *args):$/;"	m	language:Python	class:listspace	access:public	signature:(self, *args)
__init__	tina/engine.py	/^    def __init__(self):$/;"	m	language:Python	class:PathEngine	access:public	signature:(self)
__init__	tina/geometries.py	/^    def __init__(self, lo, hi):$/;"	m	language:Python	class:Box	access:public	signature:(self, lo, hi)
__init__	tina/geometries.py	/^    def __init__(self, o, d):$/;"	m	language:Python	class:Ray	access:public	signature:(self, o, d)
__init__	tina/geometries.py	/^    def __init__(self, pos, rad2):$/;"	m	language:Python	class:Sphere	access:public	signature:(self, pos, rad2)
__init__	tina/geometries.py	/^    def __init__(self, v0, v1, v2, vn0, vn1, vn2, vt0, vt1, vt2, mtlid):$/;"	m	language:Python	class:Face	access:public	signature:(self, v0, v1, v2, vn0, vn1, vn2, vt0, vt1, vt2, mtlid)
__init__	tina/image.py	/^    def __init__(self):$/;"	m	language:Python	class:ToneMapping	access:public	signature:(self)
__init__	tina/image.py	/^    def __init__(self, id):$/;"	m	language:Python	class:Image	access:public	signature:(self, id)
__init__	tina/image.py	/^    def __init__(self, size=2**22, count=2**8):$/;"	m	language:Python	class:ImagePool	access:public	signature:(self, size=2**22, count=2**8)
__init__	tina/light.py	/^    def __init__(self, count=2**6):$/;"	m	language:Python	class:LightPool	access:public	signature:(self, count=2**6)
__init__	tina/localarray.py	/^    def __init__(self, dtype, size):$/;"	m	language:Python	class:LocalArray	access:public	signature:(self, dtype, size)
__init__	tina/materials/__init__.py	/^    def __init__(self, color=V3(1.0)):$/;"	m	language:Python	class:Lambert	access:public	signature:(self, color=V3(1.0))
__init__	tina/materials/__init__.py	/^    def __init__(self, color=V3(1.0)):$/;"	m	language:Python	class:Mirror	access:public	signature:(self, color=V3(1.0))
__init__	tina/materials/__init__.py	/^    def __init__(self, color=V3(1.0), shineness=32.0):$/;"	m	language:Python	class:Phong	access:public	signature:(self, color=V3(1.0), shineness=32.0)
__init__	tina/materials/__init__.py	/^    def __init__(self, outdir, pdf, color, impo=1.0):$/;"	m	language:Python	class:BSDFSample	access:public	signature:(self, outdir, pdf, color, impo=1.0)
__init__	tina/materials/__init__.py	/^    def __init__(self, w):$/;"	m	language:Python	class:Choice	access:public	signature:(self, w)
__init__	tina/materials/disney.py	/^    def __init__(self,$/;"	m	language:Python	class:Disney	access:public	signature:(self, basecolor=V3(1.0), metallic=0.0, roughness=1.0, specular=0.5, specularTint=0.4, subsurface=0.0, sheen=0.0, sheenTint=0.4, clearcoat=0.0, clearcoatGloss=0.5, transmission=0.0, ior=1.45)
__init__	tina/model.py	/^    def __init__(self, size=2**20):$/;"	m	language:Python	class:ModelPool	access:public	signature:(self, size=2**20)
__init__	tina/mtllib.py	/^    def __init__(self, count):$/;"	m	language:Python	class:ParameterPair	access:public	signature:(self, count)
__init__	tina/mtllib.py	/^    def __init__(self, count=2**6):$/;"	m	language:Python	class:MaterialPool	access:public	signature:(self, count=2**6)
__init__	tina/stack.py	/^        def __init__(self, size):$/;"	m	language:Python	class:LocalStack.Proxy	access:public	signature:(self, size)
__init__	tina/stack.py	/^        def __init__(self, stack, mtid):$/;"	m	language:Python	class:GlobalStack.Proxy	access:public	signature:(self, stack, mtid)
__init__	tina/stack.py	/^    def __init__(self, N_mt=512 * 512, N_len=32):$/;"	m	language:Python	class:GlobalStack	access:public	signature:(self, N_mt=512 * 512, N_len=32)
__init__	tina/stack.py	/^    def __init__(self, size=64):$/;"	m	language:Python	class:LocalStack	access:public	signature:(self, size=64)
__init__	tina/tools/control.py	/^    def __init__(self, gui, fov=60, is_ortho=False, blendish=True):$/;"	m	language:Python	class:Control	access:public	signature:(self, gui, fov=60, is_ortho=False, blendish=True)
_build	tina/acceltree.py	/^    def _build(self, data, pmin, pmax, pind, curr):$/;"	m	language:Python	class:_BVHTree	access:protected	signature:(self, data, pmin, pmax, pind, curr)
_build_from_data	tina/acceltree.py	/^    def _build_from_data(self,$/;"	m	language:Python	class:_BVHTree	access:protected	signature:(self, data_dir: ti.ext_arr(), data_min: ti.ext_arr(), data_max: ti.ext_arr(), data_ind: ti.ext_arr())
_check_mouse_move	tina/tools/control.py	/^    def _check_mouse_move(self):$/;"	m	language:Python	class:Control	access:protected	signature:(self)
_clamp_unsigned_to_range	tina/common.py	/^    def _clamp_unsigned_to_range(npty, val):$/;"	f	language:Python	function:clamp_unsigned	file:	access:private	signature:(npty, val)
_define	tina/localarray.py	/^    def _define(self):$/;"	m	language:Python	class:LocalArray	access:protected	signature:(self)
_dump_face_bboxes	tina/acceltree.py	/^    def _dump_face_bboxes(self, nfaces: int, pmin: ti.ext_arr(), pmax: ti.ext_arr()):$/;"	m	language:Python	class:BVHTree	access:protected	signature:(self, nfaces: int, pmin: ti.ext_arr(), pmax: ti.ext_arr())
_instance	tina/common.py	/^    _instance = None$/;"	v	language:Python	class:Singleton	access:protected
_on_event	tina/tools/control.py	/^    def _on_event(self, e):$/;"	m	language:Python	class:Control	access:protected	signature:(self, e)
_on_fovadj	tina/tools/control.py	/^    def _on_fovadj(self, delta, origin):$/;"	m	language:Python	class:Control	access:protected	signature:(self, delta, origin)
_on_lmb_drag	tina/tools/control.py	/^    def _on_lmb_drag(self, delta, origin):$/;"	m	language:Python	class:Control	access:protected	signature:(self, delta, origin)
_on_mmb_drag	tina/tools/control.py	/^    def _on_mmb_drag(self, delta, origin):$/;"	m	language:Python	class:Control	access:protected	signature:(self, delta, origin)
_on_orbit	tina/tools/control.py	/^    def _on_orbit(self, delta, origin):$/;"	m	language:Python	class:Control	access:protected	signature:(self, delta, origin)
_on_pan	tina/tools/control.py	/^    def _on_pan(self, delta, origin):$/;"	m	language:Python	class:Control	access:protected	signature:(self, delta, origin)
_on_rmb_drag	tina/tools/control.py	/^    def _on_rmb_drag(self, delta, origin):$/;"	m	language:Python	class:Control	access:protected	signature:(self, delta, origin)
_on_wheel	tina/tools/control.py	/^    def _on_wheel(self, delta, origin):$/;"	m	language:Python	class:Control	access:protected	signature:(self, delta, origin)
_on_zoom	tina/tools/control.py	/^    def _on_zoom(self, delta, origin):$/;"	m	language:Python	class:Control	access:protected	signature:(self, delta, origin)
_override_assign	tina/localarray.py	/^    def _override_assign(self, var, idx):$/;"	m	language:Python	class:LocalArray	access:protected	signature:(self, var, idx)
_process_node	tina/tools/readgltf.py	/^    def _process_node(node, world):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(node, world)
_to_numpy	tina/image.py	/^    def _to_numpy(self, id: int, arr: ti.ext_arr()):$/;"	m	language:Python	class:ImagePool	access:protected	signature:(self, id: int, arr: ti.ext_arr())
_to_numpy	tina/model.py	/^    def _to_numpy(self, arr: ti.ext_arr(), mtlids: ti.ext_arr()):$/;"	m	language:Python	class:ModelPool	access:protected	signature:(self, arr: ti.ext_arr(), mtlids: ti.ext_arr())
_to_numpy_normalized	tina/image.py	/^    def _to_numpy_normalized(self, id: int, arr: ti.ext_arr(), tonemap: ti.template()):$/;"	m	language:Python	class:ImagePool	access:protected	signature:(self, id: int, arr: ti.ext_arr(), tonemap: ti.template())
_tri_append	tina/tools/readobj.py	/^def _tri_append(faces, indices):$/;"	f	language:Python	access:protected	signature:(faces, indices)
affine	tina/tools/matrix.py	/^def affine(lin, pos):$/;"	f	language:Python	access:public	signature:(lin, pos)
assign	tina/common.py	/^        def assign(self, value):$/;"	m	language:Python	class:namespace.FakeAssign	access:public	signature:(self, value)
assign	tina/common.py	/^    def assign(self, other):$/;"	m	language:Python	class:listspace	access:public	signature:(self, other)
assign	tina/common.py	/^    def assign(self, other):$/;"	m	language:Python	class:namespace	access:public	signature:(self, other)
assign	tina/localarray.py	/^        def assign(val):$/;"	f	language:Python	member:LocalArray._override_assign	file:	access:private	signature:(val)
back	tina/tools/control.py	/^    def back(self):$/;"	m	language:Python	class:Control	access:public	signature:(self)
bilerp	tina/common.py	/^def bilerp(f: ti.template(), pos):$/;"	f	language:Python	access:public	signature:(f: ti.template(), pos)
bounce	tina/materials/__init__.py	/^    def bounce(self, normal, sign, indir, samp):$/;"	m	language:Python	class:Lambert	access:public	signature:(self, normal, sign, indir, samp)
bounce	tina/materials/__init__.py	/^    def bounce(self, normal, sign, indir, samp):$/;"	m	language:Python	class:Mirror	access:public	signature:(self, normal, sign, indir, samp)
bounce	tina/materials/__init__.py	/^    def bounce(self, normal, sign, indir, samp):$/;"	m	language:Python	class:Phong	access:public	signature:(self, normal, sign, indir, samp)
bounce	tina/materials/disney.py	/^    def bounce(self, normal, sign, indir, samp):$/;"	m	language:Python	class:Disney	access:public	signature:(self, normal, sign, indir, samp)
brdf	tina/materials/__init__.py	/^    def brdf(self, normal, sign, indir, outdir):$/;"	m	language:Python	class:Lambert	access:public	signature:(self, normal, sign, indir, outdir)
brdf	tina/materials/__init__.py	/^    def brdf(self, normal, sign, indir, outdir):$/;"	m	language:Python	class:Mirror	access:public	signature:(self, normal, sign, indir, outdir)
brdf	tina/materials/__init__.py	/^    def brdf(self, normal, sign, indir, outdir):$/;"	m	language:Python	class:Phong	access:public	signature:(self, normal, sign, indir, outdir)
brdf	tina/materials/disney.py	/^    def brdf(self, normal, sign, indir, outdir):$/;"	m	language:Python	class:Disney	access:public	signature:(self, normal, sign, indir, outdir)
build	tina/acceltree.py	/^    def build(self):$/;"	m	language:Python	class:BVHTree	access:public	signature:(self)
build	tina/acceltree.py	/^    def build(self, pmin, pmax):$/;"	m	language:Python	class:_BVHTree	access:public	signature:(self, pmin, pmax)
calc	tests/common/test_namespace.py	/^    def calc(x):$/;"	f	language:Python	function:test_funcarg	file:	access:private	signature:(x)
calc_w	tests/common/test_namespace.py	/^        def calc_w(self):$/;"	m	language:Python	class:test_class.MyData	access:public	signature:(self)
call	tina/materials/__init__.py	/^    def call(self, r):$/;"	m	language:Python	class:Choice	access:public	signature:(self, r)
clamp	tina/common.py	/^def clamp(x, xmin=0, xmax=1):$/;"	f	language:Python	access:public	signature:(x, xmin=0, xmax=1)
clamp_unsigned	tina/common.py	/^def clamp_unsigned(x):$/;"	f	language:Python	access:public	signature:(x)
clamp_unsigned._clamp_unsigned_to_range	tina/common.py	/^    def _clamp_unsigned_to_range(npty, val):$/;"	f	language:Python	function:clamp_unsigned	file:	access:private	signature:(npty, val)
clear	tina/image.py	/^    def clear(self):$/;"	m	language:Python	class:Image	access:public	signature:(self)
clear	tina/image.py	/^    def clear(self, id: int):$/;"	m	language:Python	class:ImagePool	access:public	signature:(self, id: int)
clear	tina/stack.py	/^        def clear(self):$/;"	m	language:Python	class:GlobalStack.Proxy	access:public	signature:(self)
clear	tina/stack.py	/^        def clear(self):$/;"	m	language:Python	class:LocalStack.Proxy	access:public	signature:(self)
clz	tina/linearbvh.py	/^def clz(x):$/;"	f	language:Python	access:public	signature:(x)
data	tina/acceltree.py	/^        data = lambda: None$/;"	f	language:Python	member:_BVHTree.build	file:	access:private	signature:()
delete	tina/image.py	/^    def delete(self):$/;"	m	language:Python	class:Image	access:public	signature:(self)
delete	tina/image.py	/^    def delete(self, id):$/;"	m	language:Python	class:ImagePool	access:public	signature:(self, id)
determineRange	tina/linearbvh.py	/^def determineRange(self, n, i):$/;"	f	language:Python	access:public	signature:(self, n, i)
dielectricFresnel	tina/materials/microfacet.py	/^def dielectricFresnel(etai, etao, cosi):$/;"	f	language:Python	access:public	signature:(etai, etao, cosi)
dir2tex	tina/common.py	/^def dir2tex(dir):$/;"	f	language:Python	access:public	signature:(dir)
dot_or_zero	tina/common.py	/^def dot_or_zero(a, b):$/;"	f	language:Python	access:public	signature:(a, b)
element_intersect	tina/acceltree.py	/^    def element_intersect(self, index, ray):$/;"	m	language:Python	class:_BVHTree	access:public	signature:(self, index, ray)
eps	tina/common.py	/^eps = 1e-6$/;"	v	language:Python	access:public
eularXYZ	tina/tools/matrix.py	/^def eularXYZ(theta):$/;"	f	language:Python	access:public	signature:(theta)
expandBits	tina/linearbvh.py	/^def expandBits(v):$/;"	f	language:Python	access:public	signature:(v)
findSplit	tina/linearbvh.py	/^def findSplit(mc, l, r):$/;"	f	language:Python	access:public	signature:(mc, l, r)
free	tina/allocator.py	/^    def free(self, base):$/;"	m	language:Python	class:MemoryAllocator	access:public	signature:(self, base)
free	tina/allocator.py	/^    def free(self, id):$/;"	m	language:Python	class:IdAllocator	access:public	signature:(self, id)
from_numpy	tina/image.py	/^    def from_numpy(self, arr):$/;"	m	language:Python	class:Image	access:public	signature:(self, arr)
from_numpy	tina/image.py	/^    def from_numpy(self, id: int, arr: ti.ext_arr()):$/;"	m	language:Python	class:ImagePool	access:public	signature:(self, id: int, arr: ti.ext_arr())
from_numpy	tina/model.py	/^    def from_numpy(self, arr: ti.ext_arr(), mtlids: ti.ext_arr()):$/;"	m	language:Python	class:ModelPool	access:public	signature:(self, arr: ti.ext_arr(), mtlids: ti.ext_arr())
frustum	tina/tools/matrix.py	/^def frustum(left=-1, right=1, bottom=-1, top=1, near=1, far=100):$/;"	f	language:Python	access:public	signature:(left=-1, right=1, bottom=-1, top=1, near=1, far=100)
func	tests/common/test_multireturn.py	/^    def func(x):$/;"	f	language:Python	function:test_listspace	file:	access:private	signature:(x)
func	tests/common/test_multireturn.py	/^    def func(x):$/;"	f	language:Python	function:test_namespace	file:	access:private	signature:(x)
func	tests/common/test_multireturn.py	/^    def func(x):$/;"	f	language:Python	function:test_scalar	file:	access:private	signature:(x)
func	tina/common.py	/^    def func(rate):$/;"	f	language:Python	function:ranprint	file:	access:private	signature:(rate)
func	tina/localarray.py	/^    def func():$/;"	f	language:Python	access:public	signature:()
gammize	tina/common.py	/^def gammize(x):$/;"	f	language:Python	access:public	signature:(x)
genHierarchy	tina/linearbvh.py	/^def genHierarchy(mc, id, n):$/;"	f	language:Python	access:public	signature:(mc, id, n)
generate	tina/camera.py	/^    def generate(self, x, y):$/;"	m	language:Python	class:Camera	access:public	signature:(self, x, y)
generate	tina/camera.py	/^    def generate(self, x, y):$/;"	m	language:Python	class:_OldCamera	access:public	signature:(self, x, y)
get	tina/mtllib.py	/^    def get(self, mtlid, texcoord):$/;"	m	language:Python	class:MaterialPool	access:public	signature:(self, mtlid, texcoord)
get	tina/mtllib.py	/^    def get(self, mtlid, texcoord):$/;"	m	language:Python	class:ParameterPair	access:public	signature:(self, mtlid, texcoord)
get	tina/stack.py	/^    def get(self):$/;"	m	language:Python	class:GlobalStack	access:public	signature:(self)
get	tina/stack.py	/^    def get(self):$/;"	m	language:Python	class:LocalStack	access:public	signature:(self)
get_accessor_buffer	tina/tools/readgltf.py	/^    def get_accessor_buffer(accessor):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(accessor)
get_bufferView_bytes	tina/tools/readgltf.py	/^    def get_bufferView_bytes(bufferView):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(bufferView)
get_decorator	tina/common.py	/^    def get_decorator(node):$/;"	f	language:Python	function:_	file:	access:private	signature:(node)
get_face	tina/model.py	/^    def get_face(self, i):$/;"	m	language:Python	class:ModelPool	access:public	signature:(self, i)
get_geometries	tina/engine.py	/^    def get_geometries(self, hit, r):$/;"	m	language:Python	class:PathEngine	access:public	signature:(self, hit, r)
get_image	tina/image.py	/^    def get_image(self, aov=None, raw=False):$/;"	m	language:Python	class:Image	access:public	signature:(self, aov=None, raw=False)
get_node_local_matrix	tina/tools/readgltf.py	/^    def get_node_local_matrix(node):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(node)
get_perspective	tina/tools/control.py	/^    def get_perspective(self):$/;"	m	language:Python	class:Control	access:public	signature:(self)
getbbox	tina/geometries.py	/^    def getbbox(self):$/;"	m	language:Python	class:Face	access:public	signature:(self)
getbox	tina/acceltree.py	/^    def getbox(self, curr):$/;"	m	language:Python	class:_BVHTree	access:public	signature:(self, curr)
gui	tina/__main__.py	/^gui = ti.GUI()$/;"	v	language:Python	access:public
hit	tina/light.py	/^    def hit(self, ray):$/;"	m	language:Python	class:LightPool	access:public	signature:(self, ray)
iceil	tina/common.py	/^def iceil(x):$/;"	f	language:Python	access:public	signature:(x)
identity	tina/tools/matrix.py	/^def identity():$/;"	f	language:Python	access:public	signature:()
ifloor	tina/common.py	/^def ifloor(x):$/;"	f	language:Python	access:public	signature:(x)
im	tina/image.py	/^    im = Image(ImagePool().load('assets\/cloth.jpg'))$/;"	v	language:Python	access:public
inf	tina/common.py	/^inf = 1e6$/;"	v	language:Python	access:public
init_camera	tina/camera.py	/^        def init_camera():$/;"	f	language:Python	member:Camera.__init__	file:	access:private	signature:()
init_tonemap	tina/image.py	/^        def init_tonemap():$/;"	f	language:Python	member:ToneMapping.__init__	file:	access:private	signature:()
intersect	tina/acceltree.py	/^    def intersect(self, ray, avoid):$/;"	m	language:Python	class:BVHTree	access:public	signature:(self, ray, avoid)
intersect	tina/acceltree.py	/^    def intersect(self, ray, avoid):$/;"	m	language:Python	class:_BVHTree	access:public	signature:(self, ray, avoid)
intersect	tina/geometries.py	/^    def intersect(self, r):$/;"	m	language:Python	class:Box	access:public	signature:(self, r)
intersect	tina/geometries.py	/^    def intersect(self, ray):$/;"	m	language:Python	class:Face	access:public	signature:(self, ray)
intersect	tina/geometries.py	/^    def intersect(self, ray):$/;"	m	language:Python	class:Sphere	access:public	signature:(self, ray)
invalid	tina/materials/__init__.py	/^    def invalid(cls):$/;"	m	language:Python	class:BSDFSample	access:public	signature:(cls)
is_leaf	tina/acceltree.py	/^    def is_leaf(self, curr):$/;"	m	language:Python	class:_BVHTree	access:public	signature:(self, curr)
is_taichi_class	tina/camera.py	/^    is_taichi_class = True$/;"	v	language:Python	class:_OldCamera	access:public
is_taichi_class	tina/common.py	/^        is_taichi_class = True$/;"	v	language:Python	class:namespace.FakeAssign	access:public
is_taichi_class	tina/common.py	/^    is_taichi_class = True$/;"	v	language:Python	class:listspace	access:public
is_taichi_class	tina/common.py	/^    is_taichi_class = True$/;"	v	language:Python	class:namespace	access:public
is_taichi_class	tina/image.py	/^    is_taichi_class = True$/;"	v	language:Python	class:Image	access:public
is_taichi_class	tina/image.py	/^    is_taichi_class = True$/;"	v	language:Python	class:ImagePool	access:public
is_taichi_class	tina/localarray.py	/^    is_taichi_class = True$/;"	v	language:Python	class:LocalArray	access:public
is_taichi_class	tina/model.py	/^    is_taichi_class = True$/;"	v	language:Python	class:ModelPool	access:public
isnan	tina/common.py	/^def isnan(x):$/;"	f	language:Python	access:public	signature:(x)
lerp	tina/common.py	/^def lerp(fac, src, dst):$/;"	f	language:Python	access:public	signature:(fac, src, dst)
list_subscript	tina/common.py	/^def list_subscript(a, i):$/;"	f	language:Python	access:public	signature:(a, i)
listspace	tina/common.py	/^class listspace(list):$/;"	c	language:Python	inherits:list	access:public
listspace.__init__	tina/common.py	/^    def __init__(self, *args):$/;"	m	language:Python	class:listspace	access:public	signature:(self, *args)
listspace.assign	tina/common.py	/^    def assign(self, other):$/;"	m	language:Python	class:listspace	access:public	signature:(self, other)
listspace.is_taichi_class	tina/common.py	/^    is_taichi_class = True$/;"	v	language:Python	class:listspace	access:public
listspace.variable	tina/common.py	/^    def variable(self):$/;"	m	language:Python	class:listspace	access:public	signature:(self)
load	tina/image.py	/^    def load(cls, arr):$/;"	m	language:Python	class:Image	access:public	signature:(cls, arr)
load	tina/image.py	/^    def load(self, arr):$/;"	m	language:Python	class:ImagePool	access:public	signature:(self, arr)
load	tina/model.py	/^    def load(self, arr, mtlids=None):$/;"	m	language:Python	class:ModelPool	access:public	signature:(self, arr, mtlids=None)
load	tina/mtllib.py	/^    def load(self, i, fac, tex):$/;"	m	language:Python	class:ParameterPair	access:public	signature:(self, i, fac, tex)
load	tina/mtllib.py	/^    def load(self, materials):$/;"	m	language:Python	class:MaterialPool	access:public	signature:(self, materials)
load_uri	tina/tools/readgltf.py	/^    def load_uri(uri):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(uri)
lookat	tina/tools/matrix.py	/^def lookat(pos=(0, 0, 0), back=(0, 0, 3), up=(0, 1, 1e-12)):$/;"	f	language:Python	access:public	signature:(pos=(0, 0, 0), back=(0, 0, 3), up=(0, 1, 1e-12))
main	tests/common/test_multireturn.py	/^    def main():$/;"	f	language:Python	function:test_listspace	file:	access:private	signature:()
main	tests/common/test_multireturn.py	/^    def main():$/;"	f	language:Python	function:test_namespace	file:	access:private	signature:()
main	tests/common/test_multireturn.py	/^    def main():$/;"	f	language:Python	function:test_scalar	file:	access:private	signature:()
main	tests/common/test_namespace.py	/^    def main():$/;"	f	language:Python	function:test_assign	file:	access:private	signature:()
main	tests/common/test_namespace.py	/^    def main():$/;"	f	language:Python	function:test_class	file:	access:private	signature:()
main	tests/common/test_namespace.py	/^    def main():$/;"	f	language:Python	function:test_copy	file:	access:private	signature:()
main	tests/common/test_namespace.py	/^    def main():$/;"	f	language:Python	function:test_funcarg	file:	access:private	signature:()
malloc	tina/allocator.py	/^    def malloc(self):$/;"	m	language:Python	class:IdAllocator	access:public	signature:(self)
malloc	tina/allocator.py	/^    def malloc(self, size):$/;"	m	language:Python	class:MemoryAllocator	access:public	signature:(self, size)
mapplydir	tina/common.py	/^def mapplydir(mat, pos, wei):$/;"	f	language:Python	access:public	signature:(mat, pos, wei)
mapplynrm	tina/common.py	/^def mapplynrm(mat, pos, wei):$/;"	f	language:Python	access:public	signature:(mat, pos, wei)
mapplypos	tina/common.py	/^def mapplypos(mat, pos, wei):$/;"	f	language:Python	access:public	signature:(mat, pos, wei)
markers	pytest.ini	/^markers = taichi: mark the tests to run in the Taichi environment$/;"	k	language:Iniconf	section:pytest
materials	tina/__main__.py	/^vertices, mtlids, materials = readgltf('\/tmp\/untitled.gltf')$/;"	v	language:Python	access:public
materials	tina/tools/readgltf.py	/^    vertices, mtlids, materials = readgltf('assets\/cornell.gltf')$/;"	v	language:Python	access:public
morton3D	tina/linearbvh.py	/^def morton3D(v):$/;"	f	language:Python	access:public	signature:(v)
mtlids	tina/__main__.py	/^vertices, mtlids, materials = readgltf('\/tmp\/untitled.gltf')$/;"	v	language:Python	access:public
mtlids	tina/tools/readgltf.py	/^    vertices, mtlids, materials = readgltf('assets\/cornell.gltf')$/;"	v	language:Python	access:public
multireturn	tina/common.py	/^def multireturn(foo):$/;"	f	language:Python	access:public	signature:(foo)
multireturn.wrapped	tina/common.py	/^    def wrapped(*args):$/;"	f	language:Python	function:multireturn	file:	access:private	signature:(*args)
multireturn.wrapped.template	tina/common.py	/^        def template():$/;"	f	language:Python	function:multireturn.wrapped	file:	access:private	signature:()
namespace	tina/common.py	/^class namespace(dict):$/;"	c	language:Python	inherits:dict	access:public
namespace.FakeAssign	tina/common.py	/^    class FakeAssign:$/;"	c	language:Python	class:namespace	inherits:	access:public
namespace.FakeAssign.__call__	tina/common.py	/^        def __call__(self, *args, **kwargs):$/;"	m	language:Python	class:namespace.FakeAssign	access:public	signature:(self, *args, **kwargs)
namespace.FakeAssign.__getattr__	tina/common.py	/^        def __getattr__(self, name):$/;"	m	language:Python	class:namespace.FakeAssign	access:public	signature:(self, name)
namespace.FakeAssign.__init__	tina/common.py	/^        def __init__(self, parent, name):$/;"	m	language:Python	class:namespace.FakeAssign	access:public	signature:(self, parent, name)
namespace.FakeAssign.assign	tina/common.py	/^        def assign(self, value):$/;"	m	language:Python	class:namespace.FakeAssign	access:public	signature:(self, value)
namespace.FakeAssign.is_taichi_class	tina/common.py	/^        is_taichi_class = True$/;"	v	language:Python	class:namespace.FakeAssign	access:public
namespace.__getattr__	tina/common.py	/^    def __getattr__(self, name):$/;"	m	language:Python	class:namespace	access:public	signature:(self, name)
namespace.__init__	tina/common.py	/^    def __init__(self, **kwargs):$/;"	m	language:Python	class:namespace	access:public	signature:(self, **kwargs)
namespace.assign	tina/common.py	/^    def assign(self, other):$/;"	m	language:Python	class:namespace	access:public	signature:(self, other)
namespace.is_taichi_class	tina/common.py	/^    is_taichi_class = True$/;"	v	language:Python	class:namespace	access:public
namespace.variable	tina/common.py	/^    def variable(self):$/;"	m	language:Python	class:namespace	access:public	signature:(self)
new	tina/image.py	/^    def new(cls, nx, ny):$/;"	m	language:Python	class:Image	access:public	signature:(cls, nx, ny)
new	tina/image.py	/^    def new(self, nx, ny):$/;"	m	language:Python	class:ImagePool	access:public	signature:(self, nx, ny)
normal	tina/geometries.py	/^    def normal(self, h):$/;"	m	language:Python	class:Face	access:public	signature:(self, h)
np	tina/common.py	/^            import numpy as np$/;"	I	language:Python	member:_.GUI.rects	file:	access:private
np	tina/common.py	/^import numpy as np$/;"	I	language:Python	access:public
np	tina/tools/readobj.py	/^import numpy as np$/;"	I	language:Python	access:public
np34	tina/tools/readgltf.py	/^    def np34(x, w):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(x, w)
np43	tina/tools/readgltf.py	/^    def np43(x):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(x)
npnmlz	tina/tools/readgltf.py	/^    def npnmlz(x):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(x)
nx	tina/image.py	/^    def nx(self):$/;"	m	language:Python	class:Image	access:public	signature:(self)
ny	tina/image.py	/^    def ny(self):$/;"	m	language:Python	class:Image	access:public	signature:(self)
objautoscale	tina/tools/readobj.py	/^def objautoscale(obj):$/;"	f	language:Python	access:public	signature:(obj)
objcoors	tina/tools/readobj.py	/^def objcoors(obj):$/;"	f	language:Python	access:public	signature:(obj)
objmknorm	tina/tools/readobj.py	/^def objmknorm(obj):$/;"	f	language:Python	access:public	signature:(obj)
objmtlids	tina/tools/readobj.py	/^def objmtlids(obj):$/;"	f	language:Python	access:public	signature:(obj)
objnorms	tina/tools/readobj.py	/^def objnorms(obj):$/;"	f	language:Python	access:public	signature:(obj)
objorient	tina/tools/readobj.py	/^def objorient(obj, orient):$/;"	f	language:Python	access:public	signature:(obj, orient)
objunpackmtls	tina/tools/readobj.py	/^def objunpackmtls(obj):$/;"	f	language:Python	access:public	signature:(obj)
objverts	tina/tools/readobj.py	/^def objverts(obj):$/;"	f	language:Python	access:public	signature:(obj)
ortho	tina/tools/matrix.py	/^def ortho(left=-1, right=1, bottom=-1, top=1, near=-100, far=100):$/;"	f	language:Python	access:public	signature:(left=-1, right=1, bottom=-1, top=1, near=-100, far=100)
orthogonal	tina/tools/matrix.py	/^def orthogonal(size=1, aspect=1, near=-100, far=100):$/;"	f	language:Python	access:public	signature:(size=1, aspect=1, near=-100, far=100)
perspective	tina/tools/matrix.py	/^def perspective(fov=60, aspect=1, near=0.05, far=500):$/;"	f	language:Python	access:public	signature:(fov=60, aspect=1, near=0.05, far=500)
please_install	tina/common.py	/^def please_install(name):$/;"	f	language:Python	access:public	signature:(name)
pop	tina/stack.py	/^        def pop(self):$/;"	m	language:Python	class:GlobalStack.Proxy	access:public	signature:(self)
pop	tina/stack.py	/^        def pop(self):$/;"	m	language:Python	class:LocalStack.Proxy	access:public	signature:(self)
post_show_callback	tina/common.py	/^        def post_show_callback(self, cb):$/;"	m	language:Python	class:_.GUI	access:public	signature:(self, cb)
power_heuristic	tina/engine.py	/^def power_heuristic(a, b):$/;"	f	language:Python	access:public	signature:(a, b)
process_events	tina/tools/control.py	/^    def process_events(self):$/;"	m	language:Python	class:Control	access:public	signature:(self)
process_image	tina/tools/readgltf.py	/^    def process_image(image):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(image)
process_leaf	tina/acceltree.py	/^    def process_leaf(self, ret: ti.template(), curr, ray, avoid):$/;"	m	language:Python	class:_BVHTree	access:public	signature:(self, ret: ti.template(), curr, ray, avoid)
process_material	tina/tools/readgltf.py	/^    def process_material(material):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(material)
process_mesh	tina/tools/readgltf.py	/^    def process_mesh(mesh, world):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(mesh, world)
process_node	tina/tools/readgltf.py	/^    def process_node(node, world=None):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(node, world=None)
process_primitive	tina/tools/readgltf.py	/^    def process_primitive(prim, world):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(prim, world)
process_scene	tina/tools/readgltf.py	/^    def process_scene(scene):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(scene)
push	tina/stack.py	/^        def push(self, val):$/;"	m	language:Python	class:GlobalStack.Proxy	access:public	signature:(self, val)
push	tina/stack.py	/^        def push(self, val):$/;"	m	language:Python	class:LocalStack.Proxy	access:public	signature:(self, val)
pytest	pytest.ini	/^[pytest]$/;"	s	language:Iniconf
pytest cache directory	.pytest_cache/README.md	/^# pytest cache directory #$/;"	c	language:Markdown
quaternion	tina/tools/matrix.py	/^def quaternion(q):$/;"	f	language:Python	access:public	signature:(q)
random2	tina/common.py	/^def random2():$/;"	f	language:Python	access:public	signature:()
random3	tina/common.py	/^def random3():$/;"	f	language:Python	access:public	signature:()
ranprint	tina/common.py	/^def ranprint(*args, rate=1e-3):$/;"	f	language:Python	access:public	signature:(*args, rate=1e-3)
ranprint.func	tina/common.py	/^    def func(rate):$/;"	f	language:Python	function:ranprint	file:	access:private	signature:(rate)
readgltf	tina/tools/readgltf.py	/^def readgltf(path):$/;"	f	language:Python	access:public	signature:(path)
readgltf._process_node	tina/tools/readgltf.py	/^    def _process_node(node, world):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(node, world)
readgltf.get_accessor_buffer	tina/tools/readgltf.py	/^    def get_accessor_buffer(accessor):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(accessor)
readgltf.get_bufferView_bytes	tina/tools/readgltf.py	/^    def get_bufferView_bytes(bufferView):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(bufferView)
readgltf.get_node_local_matrix	tina/tools/readgltf.py	/^    def get_node_local_matrix(node):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(node)
readgltf.load_uri	tina/tools/readgltf.py	/^    def load_uri(uri):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(uri)
readgltf.np34	tina/tools/readgltf.py	/^    def np34(x, w):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(x, w)
readgltf.np43	tina/tools/readgltf.py	/^    def np43(x):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(x)
readgltf.npnmlz	tina/tools/readgltf.py	/^    def npnmlz(x):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(x)
readgltf.process_image	tina/tools/readgltf.py	/^    def process_image(image):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(image)
readgltf.process_material	tina/tools/readgltf.py	/^    def process_material(material):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(material)
readgltf.process_mesh	tina/tools/readgltf.py	/^    def process_mesh(mesh, world):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(mesh, world)
readgltf.process_node	tina/tools/readgltf.py	/^    def process_node(node, world=None):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(node, world=None)
readgltf.process_primitive	tina/tools/readgltf.py	/^    def process_primitive(prim, world):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(prim, world)
readgltf.process_scene	tina/tools/readgltf.py	/^    def process_scene(scene):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(scene)
readgltf.transform_primitive	tina/tools/readgltf.py	/^    def transform_primitive(p, n, t, w, f, m):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(p, n, t, w, f, m)
readobj	tina/tools/readobj.py	/^def readobj(path, orient='xyz', scale=None, simple=False, usemtl=True, quadok=False):$/;"	f	language:Python	access:public	signature:(path, orient='xyz', scale=None, simple=False, usemtl=True, quadok=False)
readply	tina/tools/readobj.py	/^def readply(path):$/;"	f	language:Python	access:public	signature:(path)
rects	tina/common.py	/^        def rects(self, topleft, bottomright, radius=1, color=0xffffff):$/;"	m	language:Python	class:_.GUI	access:public	signature:(self, topleft, bottomright, radius=1, color=0xffffff)
reflect	tina/common.py	/^def reflect(I, N):$/;"	f	language:Python	access:public	signature:(I, N)
refract	tina/common.py	/^def refract(I, N, eta):$/;"	f	language:Python	access:public	signature:(I, N, eta)
render	tina/engine.py	/^    def render(self):$/;"	m	language:Python	class:PathEngine	access:public	signature:(self)
render_aov	tina/engine.py	/^    def render_aov(self):$/;"	m	language:Python	class:PathEngine	access:public	signature:(self)
sample	tina/light.py	/^    def sample(self, pos, samp):$/;"	m	language:Python	class:LightPool	access:public	signature:(self, pos, samp)
sample_GTR1	tina/materials/microfacet.py	/^def sample_GTR1(u, v, alpha):$/;"	f	language:Python	access:public	signature:(u, v, alpha)
sample_GTR2	tina/materials/microfacet.py	/^def sample_GTR2(u, v, alpha):$/;"	f	language:Python	access:public	signature:(u, v, alpha)
scale	tina/tools/matrix.py	/^def scale(factor):$/;"	f	language:Python	access:public	signature:(factor)
schlickFresnel	tina/materials/microfacet.py	/^def schlickFresnel(cost):$/;"	f	language:Python	access:public	signature:(cost)
set	tina/stack.py	/^    def set(self, mtid):$/;"	m	language:Python	class:GlobalStack	access:public	signature:(self, mtid)
set	tina/stack.py	/^    def set(self, mtid):$/;"	m	language:Python	class:LocalStack	access:public	signature:(self, mtid)
set_perspective	tina/camera.py	/^    def set_perspective(self, pers):$/;"	m	language:Python	class:Camera	access:public	signature:(self, pers)
show	tina/common.py	/^        def show(self, *args, **kwargs):$/;"	m	language:Python	class:_.GUI	access:public	signature:(self, *args, **kwargs)
size	tina/stack.py	/^        def size(self):$/;"	m	language:Python	class:GlobalStack.Proxy	access:public	signature:(self)
size	tina/stack.py	/^        def size(self):$/;"	m	language:Python	class:LocalStack.Proxy	access:public	signature:(self)
smithGGX	tina/materials/microfacet.py	/^def smithGGX(cosi, alpha):$/;"	f	language:Python	access:public	signature:(cosi, alpha)
smoothstep	tina/common.py	/^def smoothstep(x, a, b):$/;"	f	language:Python	access:public	signature:(x, a, b)
spherical	tina/common.py	/^def spherical(h, p):$/;"	f	language:Python	access:public	signature:(h, p)
subscript	tina/image.py	/^    def subscript(self, i, x, y):$/;"	m	language:Python	class:ImagePool	access:public	signature:(self, i, x, y)
subscript	tina/image.py	/^    def subscript(self, x, y):$/;"	m	language:Python	class:Image	access:public	signature:(self, x, y)
subscript	tina/localarray.py	/^    def subscript(self, idx):$/;"	m	language:Python	class:LocalArray	access:public	signature:(self, idx)
subscript	tina/model.py	/^    def subscript(self, i):$/;"	m	language:Python	class:ModelPool	access:public	signature:(self, i)
subscripter	tina/common.py	/^def subscripter(foo):$/;"	f	language:Python	access:public	signature:(foo)
subscripter.wrapped	tina/common.py	/^    def wrapped(self, *indices):$/;"	f	language:Python	function:subscripter	file:	access:private	signature:(self, *indices)
taichi_archs	tests/conftest.py	/^taichi_archs = taichi.testing._get_taichi_archs_fixture()$/;"	v	language:Python	access:public
tanspace	tina/common.py	/^def tanspace(nrm, up=V(233., 666., 512.)):$/;"	f	language:Python	access:public	signature:(nrm, up=V(233., 666., 512.))
template	tina/common.py	/^        def template():$/;"	f	language:Python	function:multireturn.wrapped	file:	access:private	signature:()
test	tina/linearbvh.py	/^def test():$/;"	f	language:Python	access:public	signature:()
test_assign	tests/common/test_namespace.py	/^def test_assign():$/;"	f	language:Python	access:public	signature:()
test_assign.main	tests/common/test_namespace.py	/^    def main():$/;"	f	language:Python	function:test_assign	file:	access:private	signature:()
test_class	tests/common/test_namespace.py	/^def test_class():$/;"	f	language:Python	access:public	signature:()
test_class.MyData	tests/common/test_namespace.py	/^    class MyData(namespace):$/;"	c	language:Python	function:test_class	file:	inherits:namespace	access:private
test_class.MyData.__init__	tests/common/test_namespace.py	/^        def __init__(self, z):$/;"	m	language:Python	class:test_class.MyData	access:public	signature:(self, z)
test_class.MyData.calc_w	tests/common/test_namespace.py	/^        def calc_w(self):$/;"	m	language:Python	class:test_class.MyData	access:public	signature:(self)
test_class.main	tests/common/test_namespace.py	/^    def main():$/;"	f	language:Python	function:test_class	file:	access:private	signature:()
test_copy	tests/common/test_namespace.py	/^def test_copy():$/;"	f	language:Python	access:public	signature:()
test_copy.main	tests/common/test_namespace.py	/^    def main():$/;"	f	language:Python	function:test_copy	file:	access:private	signature:()
test_funcarg	tests/common/test_namespace.py	/^def test_funcarg():$/;"	f	language:Python	access:public	signature:()
test_funcarg.calc	tests/common/test_namespace.py	/^    def calc(x):$/;"	f	language:Python	function:test_funcarg	file:	access:private	signature:(x)
test_funcarg.main	tests/common/test_namespace.py	/^    def main():$/;"	f	language:Python	function:test_funcarg	file:	access:private	signature:()
test_listspace	tests/common/test_multireturn.py	/^def test_listspace():$/;"	f	language:Python	access:public	signature:()
test_listspace.func	tests/common/test_multireturn.py	/^    def func(x):$/;"	f	language:Python	function:test_listspace	file:	access:private	signature:(x)
test_listspace.main	tests/common/test_multireturn.py	/^    def main():$/;"	f	language:Python	function:test_listspace	file:	access:private	signature:()
test_namespace	tests/common/test_multireturn.py	/^def test_namespace():$/;"	f	language:Python	access:public	signature:()
test_namespace.func	tests/common/test_multireturn.py	/^    def func(x):$/;"	f	language:Python	function:test_namespace	file:	access:private	signature:(x)
test_namespace.main	tests/common/test_multireturn.py	/^    def main():$/;"	f	language:Python	function:test_namespace	file:	access:private	signature:()
test_scalar	tests/common/test_multireturn.py	/^def test_scalar():$/;"	f	language:Python	access:public	signature:()
test_scalar.func	tests/common/test_multireturn.py	/^    def func(x):$/;"	f	language:Python	function:test_scalar	file:	access:private	signature:(x)
test_scalar.main	tests/common/test_multireturn.py	/^    def main():$/;"	f	language:Python	function:test_scalar	file:	access:private	signature:()
texcoord	tina/geometries.py	/^    def texcoord(self, h):$/;"	m	language:Python	class:Face	access:public	signature:(self, h)
ti	tina/common.py	/^import taichi as ti$/;"	I	language:Python	access:public
to_numpy	tina/image.py	/^    def to_numpy(self):$/;"	m	language:Python	class:Image	access:public	signature:(self)
to_numpy	tina/image.py	/^    def to_numpy(self, id):$/;"	m	language:Python	class:ImagePool	access:public	signature:(self, id)
to_numpy	tina/model.py	/^    def to_numpy(self, id):$/;"	m	language:Python	class:ModelPool	access:public	signature:(self, id)
to_numpy_normalized	tina/image.py	/^    def to_numpy_normalized(self, id, tonemap=None):$/;"	m	language:Python	class:ImagePool	access:public	signature:(self, id, tonemap=None)
to_numpy_normalized	tina/image.py	/^    def to_numpy_normalized(self, tonemap=None):$/;"	m	language:Python	class:Image	access:public	signature:(self, tonemap=None)
totuple	tina/common.py	/^def totuple(x):$/;"	f	language:Python	access:public	signature:(x)
tovector	tina/common.py	/^def tovector(x):$/;"	f	language:Python	access:public	signature:(x)
trace	tina/engine.py	/^    def trace(self, r):$/;"	m	language:Python	class:PathEngine	access:public	signature:(self, r)
transform_primitive	tina/tools/readgltf.py	/^    def transform_primitive(p, n, t, w, f, m):$/;"	f	language:Python	function:readgltf	file:	access:private	signature:(p, n, t, w, f, m)
translate	tina/tools/matrix.py	/^def translate(offset):$/;"	f	language:Python	access:public	signature:(offset)
trilerp	tina/common.py	/^def trilerp(f: ti.template(), pos):$/;"	f	language:Python	access:public	signature:(f: ti.template(), pos)
true_normal	tina/geometries.py	/^    def true_normal(self):$/;"	m	language:Python	class:Face	access:public	signature:(self)
truth	tina/common.py	/^def truth(x):$/;"	f	language:Python	access:public	signature:(x)
ungammize	tina/common.py	/^def ungammize(x):$/;"	f	language:Python	access:public	signature:(x)
uniqid	tina/localarray.py	/^    uniqid = 0$/;"	v	language:Python	class:LocalArray	access:public
unlerp	tina/common.py	/^def unlerp(val, src, dst):$/;"	f	language:Python	access:public	signature:(val, src, dst)
unset	tina/stack.py	/^    def unset(self):$/;"	m	language:Python	class:GlobalStack	access:public	signature:(self)
unset	tina/stack.py	/^    def unset(self):$/;"	m	language:Python	class:LocalStack	access:public	signature:(self)
unspherical	tina/common.py	/^def unspherical(dir):$/;"	f	language:Python	access:public	signature:(dir)
up	tina/tools/control.py	/^    def up(self):$/;"	m	language:Python	class:Control	access:public	signature:(self)
variable	tina/common.py	/^    def variable(self):$/;"	m	language:Python	class:listspace	access:public	signature:(self)
variable	tina/common.py	/^    def variable(self):$/;"	m	language:Python	class:namespace	access:public	signature:(self)
variable	tina/image.py	/^    def variable(self):$/;"	m	language:Python	class:Image	access:public	signature:(self)
variable	tina/localarray.py	/^    def variable(self):$/;"	m	language:Python	class:LocalArray	access:public	signature:(self)
vconcat	tina/common.py	/^def vconcat(*xs):$/;"	f	language:Python	access:public	signature:(*xs)
vertices	tina/__main__.py	/^vertices, mtlids, materials = readgltf('\/tmp\/untitled.gltf')$/;"	v	language:Python	access:public
vertices	tina/tools/readgltf.py	/^    vertices, mtlids, materials = readgltf('assets\/cornell.gltf')$/;"	v	language:Python	access:public
visit_struct_for	tina/common.py	/^    def visit_struct_for(self, node, is_grouped):$/;"	f	language:Python	function:_	file:	access:private	signature:(self, node, is_grouped)
wrapped	tina/common.py	/^    def wrapped(*args):$/;"	f	language:Python	function:multireturn	file:	access:private	signature:(*args)
wrapped	tina/common.py	/^    def wrapped(self, *indices):$/;"	f	language:Python	function:subscripter	file:	access:private	signature:(self, *indices)
writeobj	tina/tools/readobj.py	/^def writeobj(path, obj):$/;"	f	language:Python	access:public	signature:(path, obj)
